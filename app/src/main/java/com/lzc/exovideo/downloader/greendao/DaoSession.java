package com.lzc.exovideo.downloader.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.lzc.exovideo.db.entity.VideoDetailInfo;
import com.lzc.exovideo.db.entity.VideoInfo;
import com.lzc.exovideo.db.entity.UnAbleFilm;
import com.lzc.exovideo.db.entity.FilmInfo;
import com.lzc.exovideo.db.entity.VideoAddress;
import com.lzc.exovideo.db.entity.BWTitle;

import com.lzc.exovideo.downloader.greendao.VideoDetailInfoDao;
import com.lzc.exovideo.downloader.greendao.VideoInfoDao;
import com.lzc.exovideo.downloader.greendao.UnAbleFilmDao;
import com.lzc.exovideo.downloader.greendao.FilmInfoDao;
import com.lzc.exovideo.downloader.greendao.VideoAddressDao;
import com.lzc.exovideo.downloader.greendao.BWTitleDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig videoDetailInfoDaoConfig;
    private final DaoConfig videoInfoDaoConfig;
    private final DaoConfig unAbleFilmDaoConfig;
    private final DaoConfig filmInfoDaoConfig;
    private final DaoConfig videoAddressDaoConfig;
    private final DaoConfig bWTitleDaoConfig;

    private final VideoDetailInfoDao videoDetailInfoDao;
    private final VideoInfoDao videoInfoDao;
    private final UnAbleFilmDao unAbleFilmDao;
    private final FilmInfoDao filmInfoDao;
    private final VideoAddressDao videoAddressDao;
    private final BWTitleDao bWTitleDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        videoDetailInfoDaoConfig = daoConfigMap.get(VideoDetailInfoDao.class).clone();
        videoDetailInfoDaoConfig.initIdentityScope(type);

        videoInfoDaoConfig = daoConfigMap.get(VideoInfoDao.class).clone();
        videoInfoDaoConfig.initIdentityScope(type);

        unAbleFilmDaoConfig = daoConfigMap.get(UnAbleFilmDao.class).clone();
        unAbleFilmDaoConfig.initIdentityScope(type);

        filmInfoDaoConfig = daoConfigMap.get(FilmInfoDao.class).clone();
        filmInfoDaoConfig.initIdentityScope(type);

        videoAddressDaoConfig = daoConfigMap.get(VideoAddressDao.class).clone();
        videoAddressDaoConfig.initIdentityScope(type);

        bWTitleDaoConfig = daoConfigMap.get(BWTitleDao.class).clone();
        bWTitleDaoConfig.initIdentityScope(type);

        videoDetailInfoDao = new VideoDetailInfoDao(videoDetailInfoDaoConfig, this);
        videoInfoDao = new VideoInfoDao(videoInfoDaoConfig, this);
        unAbleFilmDao = new UnAbleFilmDao(unAbleFilmDaoConfig, this);
        filmInfoDao = new FilmInfoDao(filmInfoDaoConfig, this);
        videoAddressDao = new VideoAddressDao(videoAddressDaoConfig, this);
        bWTitleDao = new BWTitleDao(bWTitleDaoConfig, this);

        registerDao(VideoDetailInfo.class, videoDetailInfoDao);
        registerDao(VideoInfo.class, videoInfoDao);
        registerDao(UnAbleFilm.class, unAbleFilmDao);
        registerDao(FilmInfo.class, filmInfoDao);
        registerDao(VideoAddress.class, videoAddressDao);
        registerDao(BWTitle.class, bWTitleDao);
    }
    
    public void clear() {
        videoDetailInfoDaoConfig.clearIdentityScope();
        videoInfoDaoConfig.clearIdentityScope();
        unAbleFilmDaoConfig.clearIdentityScope();
        filmInfoDaoConfig.clearIdentityScope();
        videoAddressDaoConfig.clearIdentityScope();
        bWTitleDaoConfig.clearIdentityScope();
    }

    public VideoDetailInfoDao getVideoDetailInfoDao() {
        return videoDetailInfoDao;
    }

    public VideoInfoDao getVideoInfoDao() {
        return videoInfoDao;
    }

    public UnAbleFilmDao getUnAbleFilmDao() {
        return unAbleFilmDao;
    }

    public FilmInfoDao getFilmInfoDao() {
        return filmInfoDao;
    }

    public VideoAddressDao getVideoAddressDao() {
        return videoAddressDao;
    }

    public BWTitleDao getBWTitleDao() {
        return bWTitleDao;
    }

}
